
; PICBASIC PRO(TM) Compiler 3.0.9.2, (c) 1998, 2016 microEngineering Labs, Inc. All Rights Reserved. 
MPASMX_USED			EQU	1

#define	PBP_PATH	C:\PROGRAM FILES (X86)\PBP3\




        NOLIST
    ifdef PM_USED
        LIST
        include 'M16F88.INC'	; PM header
        XALL
        NOLIST
    else
        LIST
        LIST p = 16F88, r = dec, w = -302, c = 255
        INCLUDE "P16F88.INC"	; MPASM  Header
        NOLIST
    endif
        LIST


PBP_HARDWAREDEF  macro
  endm


    __CONFIG _CONFIG1, _INTRC_IO & _PWRTE_ON & _MCLR_OFF & _LVP_OFF



; Define statements.
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00144	DEFINE  CODE_SIZE 4
#define		CODE_SIZE		 4
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00027	DEFINE OSC 8
#define		OSC		 8
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00037	DEFINE ADC_BITS 10 ' AN1 is a 10-bit A/D
#define		ADC_BITS		 10 

RAM_START       		EQU	00020h
RAM_END         		EQU	001EFh
RAM_BANKS       		EQU	00004h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00110h
BANK2_END       		EQU	0016Fh
BANK3_START     		EQU	00190h
BANK3_END       		EQU	001EFh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	021FFh

; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.RAM	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00038	A00038	ad_word Var WORD ' word from the A/D converter (10 bits padded with 6 0's)
_ad_word         		EQU	RAM_START + 018h
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00054	A0003A	pauseLength var word
_pauseLength     		EQU	RAM_START + 01Ah
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00001	A0003C	' PIC16F88 code template for MECH307 Labs
T1              		EQU	RAM_START + 01Ch
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00039	A0003E	ad_scaled Var BYTE
_ad_scaled       		EQU	RAM_START + 01Eh
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00053	A0003F	I Var BYTE
_I               		EQU	RAM_START + 01Fh
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00057	A00040	tmpByte var byte
_tmpByte         		EQU	RAM_START + 020h
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00060	A00041	x var byte
_x               		EQU	RAM_START + 021h
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00061	A00042	y var byte
_y               		EQU	RAM_START + 022h
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00145	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00146	PORTH   VAR     PORTA
_PORTH           		EQU	 PORTA
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00147	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00148	TRISH   VAR     TRISA
_TRISH           		EQU	 TRISA
#define _LED             	_PORTB??0
#define _SWITCHL         	_PORTA??0
#define _SWITCHR         	_PORTA??7
#define _THROTTLE        	_PORTA??1
#define _SERIALOUT       	_PORTB??1
#define _OSCCON??4       	 OSCCON, 004h
#define _OSCCON??5       	 OSCCON, 005h
#define _OSCCON??6       	 OSCCON, 006h
#define _ADCON1??7       	 ADCON1, 007h
#define _TRISA??1        	 TRISA, 001h
#define _PORTB??0        	 PORTB, 000h
#define _PORTA??0        	 PORTA, 000h
#define _PORTA??7        	 PORTA, 007h
#define _PORTA??1        	 PORTA, 001h
#define _PORTB??1        	 PORTB, 001h

; Constants.
_baud_rate       		EQU	00002h
	INCLUDE	"PICMOCKUPTHROTTLE.MAC"
	INCLUDE	"C:\PROGRAM FILES (X86)\PBP3\PBPPIC14.LIB"


; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00036	#HEADER
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00060	#CONFIG
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00134	BANK0   $0020, $007F
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00135	BANK1   $00A0, $00EF
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00136	BANK2   $0110, $016F
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00137	BANK3   $0190, $01EF
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00139	EEPROM  $2100, $21FF
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00141	    #ERROR "-n option (PBPL) is not supported for this device."
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00142	#ENDIF
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00143	LIBRARY "PBPPIC14"
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00144	DEFINE  CODE_SIZE 4

; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00149	include "PBPPIC14.RAM"
; C:\PROGRAM FILES (X86)\PBP3\DEVICES\PIC16F88.PBPINC	00153	#HEADER
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00022	#CONFIG
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00027	DEFINE OSC 8

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00028	OSCCON.4 = 1
	MOVE?CT	001h, _OSCCON??4

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00029	OSCCON.5 = 1
	MOVE?CT	001h, _OSCCON??5

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00030	OSCCON.6 = 1
	MOVE?CT	001h, _OSCCON??6

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00035	ANSEL = %00000010
	MOVE?CB	002h, ANSEL

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00036	ADCON1.7 = 1 : TRISA.1 = 1 ' have the 10 bits be right-justified
	MOVE?CT	001h, _ADCON1??7

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00036	ADCON1.7 = 1 : TRISA.1 = 1 ' have the 10 bits be right-justified
	MOVE?CT	001h, _TRISA??1
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00037	DEFINE ADC_BITS 10 ' AN1 is a 10-bit A/D

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00043	TRISA = %00000011 ' 1=in 0=out
	MOVE?CB	003h, TRISA

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00044	TRISB = %00000000
	MOVE?CB	000h, TRISB
; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00051	baud_rate Con 2     ' 9600 baud-rate mode for serial communication

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00063	myloop:

	LABEL?L	_myloop	

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00065	    if (SWITCHl == 1) then
	CMPNE?TCL	_SWITCHL, 001h, L00005

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00068	        ADCIN 1, ad_word    'measure throttle voltage
	ADCIN?CW	001h, _ad_word

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00069	        ad_scaled = ad_word/4   ' convert to byte 
	DIV?WCB	_ad_word, 004h, _ad_scaled

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00088	        pauseLength = 100*ad_word/1023         
	MUL?CWW	064h, _ad_word, T1
	DIV?WCW	T1, 003FFh, _pauseLength

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00089	            high LED               
	HIGH?T	_LED

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00090	            pause pauseLength      
	PAUSE?W	_pauseLength

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00091	            low LED                
	LOW?T	_LED

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00092	            pause pauseLength
	PAUSE?W	_pauseLength

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00097	    endif    
	LABEL?L	L00005	

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00098	    if (SWITCHR == 1) then 
	CMPNE?TCL	_SWITCHR, 001h, L00007

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00100	        high LED 
	HIGH?T	_LED

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00101	    endif
	LABEL?L	L00007	

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00104	    LookUp 0,["["],y
	LOOKUP?CCLB	000h, 001h, L00001, _y
	LURET?C	05Bh

	LABEL?L	L00001	

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00105	    Serout SERIALOUT, baud_rate, [y]
	SERPIN?T	_SERIALOUT
	SERMODE?C	_baud_rate
	SEROUT?B	_y

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00107	    Serout SERIALOUT, baud_rate, [ad_scaled]   'send throttle voltage though
	SERPIN?T	_SERIALOUT
	SERMODE?C	_baud_rate
	SEROUT?B	_ad_scaled

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00109	    LookUp 0,[","],y
	LOOKUP?CCLB	000h, 001h, L00002, _y
	LURET?C	02Ch

	LABEL?L	L00002	

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00110	    Serout SERIALOUT, baud_rate, [y]
	SERPIN?T	_SERIALOUT
	SERMODE?C	_baud_rate
	SEROUT?B	_y

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00112	    tmpByte = SWITCHl           
	MOVE?TB	_SWITCHL, _tmpByte

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00113	    Serout SERIALOUT, baud_rate, [tmpByte]
	SERPIN?T	_SERIALOUT
	SERMODE?C	_baud_rate
	SEROUT?B	_tmpByte

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00115	    LookUp 0,[","],y
	LOOKUP?CCLB	000h, 001h, L00003, _y
	LURET?C	02Ch

	LABEL?L	L00003	

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00116	    Serout SERIALOUT, baud_rate, [y]
	SERPIN?T	_SERIALOUT
	SERMODE?C	_baud_rate
	SEROUT?B	_y

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00118	    tmpByte = SWITCHr
	MOVE?TB	_SWITCHR, _tmpByte

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00119	    Serout SERIALOUT, baud_rate, [tmpByte]
	SERPIN?T	_SERIALOUT
	SERMODE?C	_baud_rate
	SEROUT?B	_tmpByte

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00121	    LookUp 0,["]"],y
	LOOKUP?CCLB	000h, 001h, L00004, _y
	LURET?C	05Dh

	LABEL?L	L00004	

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00122	    Serout SERIALOUT, baud_rate, [y]
	SERPIN?T	_SERIALOUT
	SERMODE?C	_baud_rate
	SEROUT?B	_y

; C:\PICPROGRAMS\PICMOCKUPTHROTTLE.PBP	00124	goto myloop  
	GOTO?L	_myloop

	END
